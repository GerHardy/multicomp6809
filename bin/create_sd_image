#!/bin/sh
# Create image file for multicomp
# SDcard is 2GByte so everything must fit within that footprint.
#
# TODO: write a PERL program to do this in a more controlled way
# so that the resultant image can be created easily and slopped onto
# SDcard using RAWWRITE or similar from Windows.
#
#


# CUBIX file system
# ~35MByte, at offset 0.
dd if=fpgacubix.img of=multicomp09_sd.img


# CUBIX boot ROM
# 2Kbytes at offset 64Mbyte
# 64MByte is block offset 1048576 * 64/512 = 0x2.0000
dd if=r09sase.bin of=multicomp09_sd.img obs=1M seek=64


# Copy of CamelForth Chromium source (just to give some text to look at!)
# 240Kbytes at offset 65MByte
# 65MByte is block offset 1048576 * 65/512 = 0x2.0800
dd if=chromium.scr of=multicomp09_sd.img obs=1M seek=65


# BASIC ROM
# 8KBytes at offset 66MByte
# 66MByte is block offset 1048576 * 66/512 = 0x2.1000
dd if=EXT_BASIC_NO_USING.bin of=multicomp09_sd.img obs=1M seek=66


# Binaries for FLEX bootstrap
# 3 blocks-worth at offset 67MByte
# Block offset 256*1024 * 268/512 = 0x2.1800
dd if=multicomp09_flex_qload.bin of=multicomp09_sd.img obs=256K seek=268
# Block offset 256*1024 * 269/512 = 0x2.1a00
dd if=multicomp09_flex_io.bin    of=multicomp09_sd.img obs=256K seek=269
# Block offset 256*1024 * 270/512 = 0x2.1c00
dd if=multicomp09_flex_sd.bin    of=multicomp09_sd.img obs=256K seek=270

# Binary for bootstrap of debug monitor (14 blocks)
# Block offset 256*1024 * 271/512 = 0x2.1e00
dd if=multicomp09_flex_buggy.bin of=multicomp09_sd.img obs=256K seek=271





# Drive 0: FLEX system disk
# (Allow) 3MBytes at offset 68MByte
# 68MByte is block offset 1048576 * 68/512 = 0x2.2000
# This is being developed in the flex directory
# there is a multicomp09_flex.dsk which needs to be expanded to
# 512byte sectors.
flex_disk_manip multicomp09_flex.dsk -outsd multicomp09_flex.img
dd if=multicomp09_flex.img of=multicomp09_sd.img obs=1M seek=68


###############################################################
## Drive 0 (above) is all that you need to boot FLEX. The lines
## below add additional disk images for Drive 1, Drive 2 and
## Drive 3. If you don't have any other .dsk files then just
## use copies of Drive 0 like this:
## flex_disk_manip multicomp09_flex.dsk -outsd flex_drive1.img
## ..
## ..
##
## You *need* something here for these 3 drives, otherwise
## FLEX will get very upset if you ever reference a drive
## other than Drive 0.
##
## For a good source of FLEX disk images install Michael
## Evenson's SWTPC6800 emulator, from:
## http://www.evenson-consulting.com/swtpc/Downloads.htm
###############################################################


# Drive 1
# (Allow) 3MBytes at offset 71MByte
# 71MByte is block offset 1048576 * 71/512 = 0x2.3800
# The .dsk file needs to be expanded to 512byte sectors.
flex_disk_manip ../flex/adventure.dsk -outsd flex_drive1.img
dd if=flex_drive1.img of=multicomp09_sd.img obs=1M seek=71

# Drive 2
# (Allow) 3MBytes at offset 74MByte
# 74MByte is block offset 1048576 * 74/512 = 0x2.5000
# The .dsk file needs to be expanded to 512byte sectors.
flex_disk_manip ../../flex09_dsk_files/CEDRIC.DSK -outsd flex_drive2.img
dd if=flex_drive2.img of=multicomp09_sd.img obs=1M seek=74

# Drive 3
# (Allow) 3MBytes at offset 77MByte
# 77MByte is block offset 1048576 * 77/512 = 0x2.6800
# The .dsk file needs to be expanded to 512byte sectors.
flex_disk_manip ../../flex09_dsk_files/SBUG.DSK -outsd flex_drive3.img
dd if=flex_drive3.img of=multicomp09_sd.img obs=1M seek=77



###############################################################
# NITROS9 boot disk
# (Allow) 3MBytes at offset 80MByte
# 80MByte is block offset 1048576 * 80/512 = 0x2.8000
# The .dsk file needs to be expanded to 512byte sectors.
nitros9_disk_manip nos96809l1v030300multicomp09_80d.dsk -outsd nitros9_drive0.img
dd if=nitros9_drive0.img of=multicomp09_sd.img obs=1M seek=80

